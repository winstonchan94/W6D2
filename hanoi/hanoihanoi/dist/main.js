!function(e){var t={};function o(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,o),s.l=!0,s.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},o.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=2)}([function(e,t){e.exports=class{constructor(){this.towers=[[3,2,1],[],[]]}isValidMove(e,t){const o=this.towers[e],r=this.towers[t];return 0!==o.length&&(0==r.length||o[o.length-1]<r[r.length-1])}isWon(){return 3==this.towers[2].length||3==this.towers[1].length}move(e,t){return!!this.isValidMove(e,t)&&(this.towers[t].push(this.towers[e].pop()),!0)}print(){console.log(JSON.stringify(this.towers))}promptMove(e,t){this.print(),e.question("Enter a starting tower: ",o=>{const r=parseInt(o);e.question("Enter an ending tower: ",e=>{const o=parseInt(e);t(r,o)})})}run(e,t){this.promptMove(e,(o,r)=>{this.move(o,r)||console.log("Invalid move!"),this.isWon()?(this.print(),console.log("You win!"),t()):this.run(e,t)})}}},function(e,t){e.exports=class{constructor(e,t){this.game=e,this.$el=t,this.fromTowerIdx=null,this.$el.on("click","ul",this.clickTower.bind(this)),this.setupTowers(),this.render()}clickTower(e){const t=$(e.currentTarget).index();null===this.fromTowerIdx?this.fromTowerIdx=t:(this.game.move(this.fromTowerIdx,t)||alert("Invalid Move! Try again."),this.fromTowerIdx=null),this.render(),this.game.isWon()&&(this.$el.off("click"),this.$el.addClass("game-over"),alert("Good work, you!"))}setupTowers(){let e,t;this.$el.empty(),this.$el.addClass("group");for(let o=0;o<3;o++){e=$("<ul>");for(let o=0;o<3;o++)t=$("<li>"),e.append(t);this.$el.append(e)}}render(){const e=this.$el.find("ul");e.removeClass(),null!==this.fromTowerIdx&&e.eq(this.fromTowerIdx).addClass("selected"),this.game.towers.forEach((t,o)=>{const r=e.eq(o).children();r.removeClass(),t.forEach((e,t)=>{r.eq(-1*(t+1)).addClass(`disk-${e}`)})})}}},function(e,t,o){const r=o(1),s=o(0);$(()=>{const e=$(".hanoi"),t=new s;new r(t,e)})}]);